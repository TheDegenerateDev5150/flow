> insert-type a.js 6 15
> cat a.js
// @flow

type Inexact = { data: string; type: string; }
type Exact = {| data: string; type: string; |}

function foo(): Array<{ data: string, type: string, ... }> {
  return [
    {data: "", type: ""},
    {data: "", type: ""},
  ];
}

(foo(): Array<Inexact>);
(foo(): Array<Exact>);

module.exports = foo;
> insert-type b.js 6 15 --strategy=generalize
> cat b.js
// @flow

type Inexact = { data: string; type: string; }
type Exact = {| data: string; type: string; |}

function foo(): Array<{ data: string, type: string, ... }> {
  return [
    {data: "", type: ""},
    {data: "", type: ""},
  ];
}

(foo(): Array<Inexact>);

module.exports = foo;
> insert-type c.js 6 15
> cat c.js
// @flow

type Inexact = { data: string; type: string; }
type Exact = {| data: string; type: string; |}

function foo(): Array<{ data: string, type: string, ... }> {
  return [
    {data: "", type: ""},
    {data: "", type: ""},
  ];
}

(foo(): Array<Exact>);

module.exports = foo;
> flow status
Error -------------------------------------------------------------------------------------------------------- a.js:14:2

Cannot cast `foo()` to array type because in array element: `{data: string, type: string, ...}` [1] is not exactly the
same as `Exact` [2]. [incompatible-type]

The above-mentioned two types must be the same because arrays are invariantly typed. To fix the error,
- Either make `Array<{data: string, type: string, ...}>` [3] and `Array<Exact>` [4] exactly the same
- Or make array type [4] a `$ReadOnlyArray`.
See https://flow.org/en/docs/faq/#why-cant-i-pass-an-arraystring-to-a-function-that-takes-an-arraystring-number.

   a.js:14:2
   14| (foo(): Array<Exact>);
        ^^^^^

References:
   a.js:6:23
    6| function foo(): Array<{ data: string, type: string, ... }> {
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   a.js:14:15
   14| (foo(): Array<Exact>);
                     ^^^^^ [2]
   a.js:6:17
    6| function foo(): Array<{ data: string, type: string, ... }> {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   a.js:14:9
   14| (foo(): Array<Exact>);
               ^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------------------- c.js:13:2

Cannot cast `foo()` to array type because in array element: `{data: string, type: string, ...}` [1] is not exactly the
same as `Exact` [2]. [incompatible-type]

The above-mentioned two types must be the same because arrays are invariantly typed. To fix the error,
- Either make `Array<{data: string, type: string, ...}>` [3] and `Array<Exact>` [4] exactly the same
- Or make array type [4] a `$ReadOnlyArray`.
See https://flow.org/en/docs/faq/#why-cant-i-pass-an-arraystring-to-a-function-that-takes-an-arraystring-number.

   c.js:13:2
   13| (foo(): Array<Exact>);
        ^^^^^

References:
   c.js:6:23
    6| function foo(): Array<{ data: string, type: string, ... }> {
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   c.js:13:15
   13| (foo(): Array<Exact>);
                     ^^^^^ [2]
   c.js:6:17
    6| function foo(): Array<{ data: string, type: string, ... }> {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   c.js:13:9
   13| (foo(): Array<Exact>);
               ^^^^^^^^^^^^ [4]



Found 2 errors
