Error ------------------------------------------------------------------------------------------------- lib/test.js:9:10

Cannot extend mixins `_module.C` [1] with `D` because in property `foo` > the return value: string [2] is incompatible
with number [3]. [incompatible-type]

   lib/test.js:9:10
   9|   foo(): string;
               ^^^^^^ [2]

References:
   lib/test.js:8:25
   8| declare class D extends _module.C {
                              ^^^^^^^^^ [1]
   lib/test.js:2:10
   2|   foo(): number;
               ^^^^^^ [3]


Error --------------------------------------------------------------------------------------------- declare_class.js:8:7

Cannot assign empty string to `C.x` because string [1] is incompatible with number [2]. [incompatible-type]

   declare_class.js:8:7
   8| C.x = "";
            ^^ [1]

References:
   declare_class.js:2:15
   2|     static x: number;
                    ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- declare_class.js:9:7

Cannot call `C.foo` with empty string bound to `x` because string [1] is incompatible with number [2].
[incompatible-type]

   declare_class.js:9:7
   9| C.foo("");
            ^^ [1]

References:
   declare_class.js:3:19
   3|     static foo(x: number): void;
                        ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- declare_class.js:12:2

Cannot cast `C.name` to number because string [1] is incompatible with number [2]. [incompatible-type]

   declare_class.js:12:2
   12| (C.name: number); // error, it's a string
        ^^^^^^

References:
   declare_class.js:1:15
    1| declare class C {
                     ^ [1]
   declare_class.js:12:10
   12| (C.name: number); // error, it's a string
                ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- declare_class.js:15:7

Cannot call `D` with `123` bound to `x` because number [1] is incompatible with string [2]. [incompatible-type]

   declare_class.js:15:7
   15| new D(123); // error, number ~> string
             ^^^ [1]

References:
   declare_class.js:5:20
    5|     constructor(x: string): void;
                          ^^^^^^ [2]



Found 5 errors
