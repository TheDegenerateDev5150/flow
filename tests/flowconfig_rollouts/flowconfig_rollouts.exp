
Should detect that rollout groups sum to less than 100%:
.flowconfig:2 Rollout groups must sum to 100%. "foo" sums to 90%

Should detect that rollout groups sum to more than 100%:
.flowconfig:2 Rollout groups must sum to 100%. "foo" sums to 180%

Duplicate rollout names are banned:
.flowconfig:3 Rollouts must have unique names. There already is a "foo" rollout

Duplicate group names are banned:
.flowconfig:2 Groups must have unique names. There is more than one "on" group

Rollout names may only contain [a-zA-Z0-9._]:
.flowconfig:2 Malformed rollout. A rollout should be an identifier followed by a list of groups, like `myRollout=10% on, 50% off`

Group names may only contain [a-zA-Z0-9._]:
.flowconfig:2 Malformed rollout group. A group should be a percentage and an identifier, like `50% on`

100% on should always be on:
Error ------------------------------------------------------------------------------------- error_unchecked_index.js:4:1

Cannot cast `roArray[0]` to string because undefined [1] is incompatible with string [2]. [incompatible-type]

   error_unchecked_index.js:4:1
   4| roArray[0] as string; // error when no_unchecked_indexed_access=true
      ^^^^^^^^^^

References:
   error_unchecked_index.js:3:39
   3| declare const roArray: $ReadOnlyArray<string>;
                                            ^^^^^^ [1]
   error_unchecked_index.js:4:15
   4| roArray[0] as string; // error when no_unchecked_indexed_access=true
                    ^^^^^^ [2]



Found 1 error

0% on should always be off:
Found 0 errors

Unknown rollout:
.flowconfig:3 Unknown rollout "short_literals"

Unknown group:
.flowconfig:6 Unknown group "potato" in rollout "short_literals"

Disable a .*.js ignore via rollout:
Error ------------------------------------------------------------------------------------- error_unchecked_index.js:4:1

Cannot cast `roArray[0]` to string because undefined [1] is incompatible with string [2]. [incompatible-type]

   error_unchecked_index.js:4:1
   4| roArray[0] as string; // error when no_unchecked_indexed_access=true
      ^^^^^^^^^^

References:
   error_unchecked_index.js:3:39
   3| declare const roArray: $ReadOnlyArray<string>;
                                            ^^^^^^ [1]
   error_unchecked_index.js:4:15
   4| roArray[0] as string; // error when no_unchecked_indexed_access=true
                    ^^^^^^ [2]



Found 1 error
