Error ------------------------------------------------------------------------------------------------------ any.js:10:6

Cannot cast `a` to empty because `A` [1] is incompatible with empty [2]. [incompatible-type]

   any.js:10:6
   10|     (a: empty); // error A ~> empty
            ^

References:
   any.js:9:18
    9| if (a instanceof A) {
                        ^ [1]
   any.js:10:9
   10|     (a: empty); // error A ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ any.js:13:6

Cannot cast `a` to empty because `P` [1] is incompatible with empty [2]. [incompatible-type]

   any.js:13:6
   13|     (a: empty); // error P ~> empty
            ^

References:
   any.js:12:18
   12| if (a instanceof P) {
                        ^ [1]
   any.js:13:9
   13|     (a: empty); // error P ~> empty
               ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ any.js:14:6

Cannot cast `a.n` to empty because number [1] is incompatible with empty [2]. [incompatible-type]

   any.js:14:6
   14|     (a.n: empty); // error number ~> empty
            ^^^

References:
   any.js:3:6
    3|   n: number;
            ^^^^^^ [1]
   any.js:14:11
   14|     (a.n: empty); // error number ~> empty
                 ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- instanceof.js:23:32

Cannot assign `'1337'` to `g.foo` because string [1] is incompatible with number [2]. [incompatible-type]

   instanceof.js:23:32
   23|   if (g instanceof X1) g.foo = '1337'; // oops
                                      ^^^^^^ [1]

References:
   instanceof.js:5:8
    5|   foo: number;
              ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- instanceof.js:46:40

Cannot assign `'1337'` to `g.bar.foo` because string [1] is incompatible with number [2]. [incompatible-type]

   instanceof.js:46:40
   46|   if (g.bar instanceof X1) g.bar.foo = '1337'; // oops
                                              ^^^^^^ [1]

References:
   instanceof.js:5:8
    5|   foo: number;
              ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- instanceof.js:69:48

Cannot assign `'1337'` to `g.baz.bar.foo` because string [1] is incompatible with number [2]. [incompatible-type]

   instanceof.js:69:48
   69|   if (g.baz.bar instanceof X1) g.baz.bar.foo = '1337'; // oops
                                                      ^^^^^^ [1]

References:
   instanceof.js:5:8
    5|   foo: number;
              ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------- instanceof.js:98:5

Cannot perform arithmetic operation because array type [1] is not a number or bigint. [unsafe-arithmetic]

   instanceof.js:98:5
   98|     x++; // error
           ^

References:
   instanceof.js:96:18
   96| function foo1(x: Array<number> | number) {
                        ^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- instanceof.js:100:7

Cannot assign `123` to `x[0]` because an index signature declaring the expected key / value type is missing in
number [1]. [incompatible-use]

   instanceof.js:100:7
   100|     x[0] = 123; // error
              ^

References:
   instanceof.js:96:34
    96| function foo1(x: Array<number> | number) {
                                         ^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- instanceof.js:105:26

The right-hand side of an `instanceof` expression must be an object, but got string [1]. [invalid-in-rhs]

   105|   const y = x instanceof 'bad'; // error
                                 ^^^^^ [1]


Error --------------------------------------------------------------------------------------------- instanceof.js:106:20

The right-hand side of an `instanceof` expression must be an object, but got string [1]. [invalid-in-rhs]

   106|   if (x instanceof 'bad') {
                           ^^^^^ [1]


Error --------------------------------------------------------------------------------------------- instanceof.js:112:30

The right-hand side of an `instanceof` expression must be an object, but got mixed [1]. [invalid-in-rhs]

   112|   if (x instanceof ('bad' as mixed)) {
                                     ^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- instanceof.js:132:5

Cannot cast `x` to empty because `B` [1] is incompatible with empty [2]. [incompatible-type]

   instanceof.js:132:5
   132|     x as empty; //error
            ^

References:
   instanceof.js:131:20
   131|   if (x instanceof A.B) {
                           ^^^ [1]
   instanceof.js:132:10
   132|     x as empty; //error
                 ^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- instanceof.js:145:5

Cannot cast `x` to empty because `B` [1] is incompatible with empty [2]. [incompatible-type]

   instanceof.js:145:5
   145|     x as empty; //error
            ^

References:
   instanceof.js:140:9
   140|   class B {}
                ^ [1]
   instanceof.js:145:10
   145|     x as empty; //error
                 ^^^^^ [2]


Error --------------------------------------------------------------------------------------------- instanceof.js:157:20

The right-hand side of an `instanceof` expression must be an object, but got null or undefined [1]. [invalid-in-rhs]

   instanceof.js:157:20
   157|   if (x instanceof A?.B) {
                           ^

References:
   instanceof.js:155:18
   155|   declare var A: ?{B: Class<B>};
                         ^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- instanceof.js:159:5

Cannot cast `x` to empty because `B` [1] is incompatible with empty [2]. [incompatible-type]

   instanceof.js:159:5
   159|     x as empty; //error
            ^

References:
   instanceof.js:153:9
   153|   class B {}
                ^ [1]
   instanceof.js:159:10
   159|     x as empty; //error
                 ^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- mixed.js:4:6

Cannot cast `x` to number because `C` [1] is incompatible with number [2]. [incompatible-type]

   mixed.js:4:6
   4|     (x: number);
           ^

References:
   mixed.js:3:20
   3|   if (x instanceof C) {
                         ^ [1]
   mixed.js:4:9
   4|     (x: number);
              ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- mixed.js:38:7

Cannot get `x.p` because property `p` is missing in `Object` [1]. [prop-missing]

   mixed.js:38:7
   38|     x.p;
             ^

References:
   mixed.js:37:20
   37|   if (x instanceof Object) {
                          ^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- mixed.js:44:5

Cannot call `x` because a call signature declaring the expected parameter / return type is missing in `Function` [1].
[prop-missing]

   mixed.js:44:5
   44|     x();
           ^

References:
   mixed.js:43:20
   43|   if (x instanceof Function) {
                          ^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------------- objproto.js:4:4

Cannot cast `c.p` to empty because string [1] is incompatible with empty [2]. [incompatible-type]

   objproto.js:4:4
   4|   (c.p: empty); // error: string ~> empty
         ^^^

References:
   objproto.js:1:14
   1| class C { p: string }
                   ^^^^^^ [1]
   objproto.js:4:9
   4|   (c.p: empty); // error: string ~> empty
              ^^^^^ [2]



Found 19 errors
