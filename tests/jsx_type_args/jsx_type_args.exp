Error ---------------------------------------------------------------------------------------------------- test.js:21:40

Cannot create `ComponentMultipleArgs` element because boolean [1] is incompatible with string [2] in type argument `T`.
[incompatible-type]

   test.js:21:40
   21| <ComponentMultipleArgs<string, number, boolean> r="foo" s={1} t={true} />; // error: bool ~> string
                                              ^^^^^^^ [1]

References:
   test.js:12:49
   12| declare function ComponentMultipleArgs<R, S, T: string>({
                                                       ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:22:40

Cannot create `ComponentMultipleArgs` element because boolean [1] is incompatible with string [2] in type argument `T`.
[incompatible-type]

   test.js:22:40
   22| <ComponentMultipleArgs<string, number, boolean> r="foo" s={1} t="s" />; // error: bool ~> string, string ~> bool
                                              ^^^^^^^ [1]

References:
   test.js:12:49
   12| declare function ComponentMultipleArgs<R, S, T: string>({
                                                       ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:22:65

Cannot create `ComponentMultipleArgs` element because string [1] is incompatible with boolean [2] in property `t`.
[incompatible-type]

   test.js:22:65
   22| <ComponentMultipleArgs<string, number, boolean> r="foo" s={1} t="s" />; // error: bool ~> string, string ~> bool
                                                                       ^^^ [1]

References:
   test.js:22:40
   22| <ComponentMultipleArgs<string, number, boolean> r="foo" s={1} t="s" />; // error: bool ~> string, string ~> bool
                                              ^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:23:2

Cannot use function type [1] with fewer than 3 type arguments. [missing-type-arg]

   test.js:23:2
   23| <ComponentMultipleArgs<string> r="foo" s={1} t="s" />; // error: arity
        ^^^^^^^^^^^^^^^^^^^^^

References:
   test.js:12:39
   12| declare function ComponentMultipleArgs<R, S, T: string>({
                                             ^^^^^^^^^^^^^^^^^ [1]



Found 4 errors
