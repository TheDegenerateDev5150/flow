Error ---------------------------------------------------------------------------------------------------- Arrays.js:5:8

Cannot assign `"..."` to `a[1]` because string [1] is incompatible with number [2]. [incompatible-type]

   Arrays.js:5:8
   5| a[1] = "..."; // no error under old inference, error under LTI
             ^^^^^ [1]

References:
   Arrays.js:4:8
   4| a[0] = 1;
             ^ [2]


Error -------------------------------------------------------------------------------------------------- isarray.js:3:31

Cannot assign `array` to `problem` because read-only array type [1] is incompatible with array type [2].
[incompatible-type]

   isarray.js:3:31
   3|     const problem: Array<Z> = array; // error
                                    ^^^^^

References:
   isarray.js:1:25
   1| function hmm1<Z>(array: Z) {
                              ^ [1]
   isarray.js:3:20
   3|     const problem: Array<Z> = array; // error
                         ^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- isarray.js:10:31

Cannot assign `array` to `problem` because read-only array type [1] is incompatible with array type [2].
[incompatible-type]

   isarray.js:10:31
   10|     const problem: Array<Z> = array; // error
                                     ^^^^^

References:
   isarray.js:8:26
    8|   function hmm<Z>(array: Z): Z  {
                                ^ [1]
   isarray.js:10:20
   10|     const problem: Array<Z> = array; // error
                          ^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- isarray.js:23:35

Cannot assign `array` to `problem` because read-only array type [1] is incompatible with array type [2].
[incompatible-type]

   isarray.js:23:35
   23|     const problem: Array<mixed> = array; // error
                                         ^^^^^

References:
   isarray.js:21:22
   21| function hmm2(array: mixed) {
                            ^^^^^ [1]
   isarray.js:23:20
   23|     const problem: Array<mixed> = array; // error
                          ^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ map.js:6:13

Invalid check of empty string against number [1] because string [2] is incompatible with number [1]. [incompatible-type]

   map.js:6:13
   6|   if (n !== '') { // number incompatible with string
                  ^^ [2]

References:
   map.js:2:21
   2|   a: $ReadOnlyArray<number>,
                          ^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- numeric_elem.js:6:1

Cannot assign `0` to `arr[day]` because `Date` [1] is not an array index. [incompatible-use]

   numeric_elem.js:6:1
   6| arr[day] = 0;
      ^^^^^^^^

References:
   numeric_elem.js:2:11
   2| var day = new Date;
                ^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- numeric_elem.js:7:2

Cannot get `arr[day]` because `Date` [1] is not an array index. [incompatible-use]

   numeric_elem.js:7:2
   7| (arr[day]: string); // error: number ~> string
       ^^^^^^^^

References:
   numeric_elem.js:2:11
   2| var day = new Date;
                ^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------------- spread.js:67:2

Cannot cast array literal to array type because number [1] is incompatible with string [2] in array element.
[incompatible-type]

   spread.js:67:2
   67| ([...emp]: Array<string>); // error
        ^^^^^^^^

References:
   spread.js:66:10
   66| emp.push(42);
                ^^ [1]
   spread.js:67:18
   67| ([...emp]: Array<string>); // error
                        ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- subtyping.js:5:4

Cannot cast `arr` to array type because `Animal` [1] is incompatible with `Dog` [2] in array element. 

Arrays are invariantly typed. See
https://flow.org/en/docs/faq/#why-cant-i-pass-an-arraystring-to-a-function-that-takes-an-arraystring-number.
[incompatible-type]

   subtyping.js:5:4
   5|   (arr: Array<Animal>); // error
         ^^^

References:
   subtyping.js:5:15
   5|   (arr: Array<Animal>); // error
                    ^^^^^^ [1]
   subtyping.js:4:28
   4|   declare const arr: Array<Dog>;
                                 ^^^ [2]


Error ------------------------------------------------------------------------------------------------ subtyping.js:10:4

Cannot cast `arr` to array type because property `foo` is missing in object type [1] but exists in object type [2] in
array element. [incompatible-type]

   subtyping.js:10:4
   10|   (arr: Array<{...}>); // error
          ^^^

References:
   subtyping.js:10:15
   10|   (arr: Array<{...}>); // error
                     ^^^^^ [1]
   subtyping.js:9:28
    9|   declare const arr: Array<{foo: string, ...}>;
                                  ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ subtyping.js:15:4

Cannot cast `arr` to array type because property `foo` is missing in object type [1] but exists in object type [2] in
array element. [incompatible-type]

   subtyping.js:15:4
   15|   (arr: Array<{}>); // error
          ^^^

References:
   subtyping.js:15:15
   15|   (arr: Array<{}>); // error
                     ^^ [1]
   subtyping.js:14:28
   14|   declare const arr: Array<{foo: string}>;
                                  ^^^^^^^^^^^^^ [2]



Found 11 errors
