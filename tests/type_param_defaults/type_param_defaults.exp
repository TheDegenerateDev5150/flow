Error -------------------------------------------------------------------------------------------------- classes.js:15:2

Cannot cast `b_number.p` to boolean because number [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:15:2
   15| (b_number.p: boolean); // Error number ~> boolean
        ^^^^^^^^^^

References:
   classes.js:11:17
   11| var b_number: B<number> = new B(123);
                       ^^^^^^ [1]
   classes.js:15:14
   15| (b_number.p: boolean); // Error number ~> boolean
                    ^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- classes.js:16:2

Cannot cast `b_void.p` to boolean because undefined [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:16:2
   16| (b_void.p: boolean); // Error void ~> boolean
        ^^^^^^^^

References:
   classes.js:12:15
   12| var b_void: B<void> = new B();
                     ^^^^ [1]
   classes.js:16:12
   16| (b_void.p: boolean); // Error void ~> boolean
                  ^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- classes.js:17:2

Cannot cast `b_default.p` to boolean because string [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:17:2
   17| (b_default.p: boolean); // Error string ~> boolean
        ^^^^^^^^^^^

References:
   classes.js:9:13
    9| class B<T = string> extends A<T> {}
                   ^^^^^^ [1]
   classes.js:17:15
   17| (b_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:21:17

Cannot instantiate `C` because in type argument `T`: number [1] is incompatible with string [2]. [incompatible-type]

   classes.js:21:17
   21| var c_number: C<number> = new C(123); // Error number ~> ?string
                       ^^^^^^ [1]

References:
   classes.js:19:13
   19| class C<T: ?string = string> extends A<T> {}
                   ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:21:31

Cannot call `C` because in type argument `T`: number [1] is incompatible with string [2]. [incompatible-type]

   classes.js:21:31
   21| var c_number: C<number> = new C(123); // Error number ~> ?string
                                     ^

References:
   classes.js:21:17
   21| var c_number: C<number> = new C(123); // Error number ~> ?string
                       ^^^^^^ [1]
   classes.js:19:13
   19| class C<T: ?string = string> extends A<T> {}
                   ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- classes.js:25:2

Cannot cast `c_void.p` to boolean because undefined [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:25:2
   25| (c_void.p: boolean); // Error void ~> boolean
        ^^^^^^^^

References:
   classes.js:22:15
   22| var c_void: C<void> = new C();
                     ^^^^ [1]
   classes.js:25:12
   25| (c_void.p: boolean); // Error void ~> boolean
                  ^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- classes.js:26:2

Cannot cast `c_default.p` to boolean because string [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:26:2
   26| (c_default.p: boolean); // Error string ~> boolean
        ^^^^^^^^^^^

References:
   classes.js:19:22
   19| class C<T: ?string = string> extends A<T> {}
                            ^^^^^^ [1]
   classes.js:26:15
   26| (c_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:32:21

Cannot use `D` [1] with fewer than 1 type argument. [missing-type-arg]

   classes.js:32:21
   32| var d_too_few_args: D<> = new D('hello'); // Error too few tparams
                           ^^^

References:
   classes.js:28:8
   28| class D<S, T = string> extends A<T> {}
              ^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------- classes.js:33:17

Cannot use `D` [1] with more than 2 type arguments. [extra-type-arg]

   classes.js:33:17
   33| var d_too_many: D<mixed, string, string> = new D('hello'); // Error too many tparams
                       ^^^^^^^^^^^^^^^^^^^^^^^^

References:
   classes.js:28:8
   28| class D<S, T = string> extends A<T> {}
              ^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------------- classes.js:35:2

Cannot cast `d_number.p` to boolean because number [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:35:2
   35| (d_number.p: boolean); // Error number ~> boolean
        ^^^^^^^^^^

References:
   classes.js:29:24
   29| var d_number: D<mixed, number> = new D(123);
                              ^^^^^^ [1]
   classes.js:35:14
   35| (d_number.p: boolean); // Error number ~> boolean
                    ^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- classes.js:36:2

Cannot cast `d_void.p` to boolean because undefined [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:36:2
   36| (d_void.p: boolean); // Error void ~> boolean
        ^^^^^^^^

References:
   classes.js:30:22
   30| var d_void: D<mixed, void> = new D();
                            ^^^^ [1]
   classes.js:36:12
   36| (d_void.p: boolean); // Error void ~> boolean
                  ^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- classes.js:37:2

Cannot cast `d_default.p` to boolean because string [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:37:2
   37| (d_default.p: boolean); // Error string ~> boolean
        ^^^^^^^^^^^

References:
   classes.js:28:16
   28| class D<S, T = string> extends A<T> {}
                      ^^^^^^ [1]
   classes.js:37:15
   37| (d_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:39:32

string [1] is incompatible with number [2]. [incompatible-type]

   classes.js:39:32
   39| class E<S: string, T: number = S> {} // Error: string ~> number
                                      ^ [1]

References:
   classes.js:39:23
   39| class E<S: string, T: number = S> {} // Error: string ~> number
                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:40:27

number [1] is incompatible with `S` [2]. [incompatible-type]

   classes.js:40:27
   40| class F<S: string, T: S = number> {} // Error: number ~> string
                                 ^^^^^^ [1]

References:
   classes.js:40:23
   40| class F<S: string, T: S = number> {} // Error: number ~> string
                             ^ [2]


Error -------------------------------------------------------------------------------------------------- classes.js:46:2

Cannot cast `g_default.p` to boolean because string [1] is incompatible with boolean [2]. [incompatible-type]

   classes.js:46:2
   46| (g_default.p: boolean); // Error string ~> boolean
        ^^^^^^^^^^^

References:
   classes.js:44:18
   44| var g_default: G<string> = new G('hello');
                        ^^^^^^ [1]
   classes.js:46:15
   46| (g_default.p: boolean); // Error string ~> boolean
                     ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- classes.js:48:13

Cannot resolve name `T`. [cannot-resolve-name]

   48| class H<S = T, T = string> {} // Error - can't refer to T before it's defined
                   ^



Found 16 errors
