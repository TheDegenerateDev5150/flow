Error --------------------------------------------------------------------------------------------------- assign.js:4:19

Cannot assign `1` to `obj.constructor` because number [1] is incompatible with function [2]. [incompatible-type]

   assign.js:4:19
   4| obj.constructor = 1; // error number ~> function
                        ^ [1]

References:
   assign.js:4:5
   4| obj.constructor = 1; // error number ~> function
          ^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- assign.js:5:19

Cannot assign `null` to `obj.constructor` because null [1] is incompatible with function [2]. [incompatible-type]

   assign.js:5:19
   5| obj.constructor = null; // error null ~> function
                        ^^^^ [1]

References:
   assign.js:5:5
   5| obj.constructor = null; // error null ~> function
          ^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- constructor.js:6:19

Cannot expect number as the return type of function because number [1] is incompatible with implicitly-returned
undefined. [incompatible-type]

   6|     constructor():number { }
                        ^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- constructor.js:6:19

Cannot return number because number [1] is incompatible with constructor void return [2]. [incompatible-type]

   constructor.js:6:19
   6|     constructor():number { }
                        ^^^^^^ [1]

References:
   constructor.js:6:18
   6|     constructor():number { }
                       ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- constructor.js:15:10

Cannot call `Foo` with `123` bound to `iterable` because number [1] is incompatible with string [2]. [incompatible-type]

   constructor.js:15:10
   15| (new Foo(123): Bar<string>); // error, number !~> string
                ^^^ [1]

References:
   constructor.js:15:20
   15| (new Foo(123): Bar<string>); // error, number !~> string
                          ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- constructor.js:22:10

Cannot call `Baz` with `123` bound to `iterable` because number [1] is incompatible with string [2]. [incompatible-type]

   constructor.js:22:10
   22| (new Baz(123): Baz<string>); // error, number !~> string
                ^^^ [1]

References:
   constructor.js:22:20
   22| (new Baz(123): Baz<string>); // error, number !~> string
                          ^^^^^^ [2]


Error ---------------------------------------------------------------------- exported_nonvoid_return_constructor.js:2:18

Cannot return object type because object type [1] is incompatible with constructor void return [2]. [incompatible-type]

   exported_nonvoid_return_constructor.js:2:18
   2|   constructor(): {foo: number} { // Error: must return void
                       ^^^^^^^^^^^^^ [1]

References:
   exported_nonvoid_return_constructor.js:2:16
   2|   constructor(): {foo: number} { // Error: must return void
                     ^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- invalid.js:5:15

Cannot use `new` on function [1]. Only classes can be constructed. [invalid-constructor]

   invalid.js:5:15
   5| const c = new C(1); // ERROR
                    ^

References:
   invalid.js:1:1
   1| function C(this: {a: number}, a: number) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- invalid_async.js:2:9

Constructor can't be an async function. [ParseError]

   2|   async constructor() { }
              ^^^^^^^^^^^



Found 9 errors
