Error ------------------------------------------------------------------------------------------------ importtest.js:6:2

Cannot cast `3` to `ID` because number [1] is incompatible with `ID` [2]. [incompatible-type]

   importtest.js:6:2
   6| (3 : ID); // Error: number ~> ID
       ^ [1]

References:
   importtest.js:6:6
   6| (3 : ID); // Error: number ~> ID
           ^^ [2]


Error ----------------------------------------------------------------------------------------------- importtest.js:9:12

Cannot return `x` because number [1] is incompatible with `ID` [2]. [incompatible-type]

   importtest.js:9:12
   9|     return x;
                 ^

References:
   importtest.js:8:18
   8| function bad1(x: number) : ID { // Error: number ~> ID
                       ^^^^^^ [1]
   importtest.js:8:28
   8| function bad1(x: number) : ID { // Error: number ~> ID
                                 ^^ [2]


Error ---------------------------------------------------------------------------------------------- importtest.js:13:22

Cannot call `Test.hide` with `x` bound to `x` because `ID` [1] is incompatible with number [2]. [incompatible-type]

   importtest.js:13:22
   13|     return Test.hide(x); // Error: ID ~> number
                            ^

References:
   importtest.js:12:18
   12| function bad2(x: ID) : ID {
                        ^^ [1]
   test.js:11:25
   11| export function hide(x: number) : ID {
                               ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------- importtest.js:17:12

Cannot return `x` because `ID` [1] is incompatible with number [2]. [incompatible-type]

   importtest.js:17:12
   17|     return x; // Error: ID ~> ID2
                  ^

References:
   importtest.js:16:18
   16| function bad3(x: ID) : ID2 {
                        ^^ [1]
   importtest.js:16:24
   16| function bad3(x: ID) : ID2 {
                              ^^^ [2]


Error ---------------------------------------------------------------------------------------------- importtest.js:21:12

Cannot return `x` because number [1] is incompatible with `ID` [2]. [incompatible-type]

   importtest.js:21:12
   21|     return x;
                  ^

References:
   importtest.js:20:18
   20| function bad4(x: ID2) : ID { // Error: ID2 ~> ID
                        ^^^ [1]
   importtest.js:20:25
   20| function bad4(x: ID2) : ID { // Error: ID2 ~> ID
                               ^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:16:2

Cannot cast `"hello"` to `MyNum` because string [1] is incompatible with number [2]. [incompatible-type]

   test.js:16:2
   16| ("hello": MyNum) // Error: string ~> number
        ^^^^^^^ [1]

References:
   test.js:16:11
   16| ("hello": MyNum) // Error: string ~> number
                 ^^^^^ [2]



Found 6 errors
