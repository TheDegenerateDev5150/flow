Error ---------------------------------------------------------------------------------------------------- file1.js:3:18

Cannot declare `bar` [1] because the name is already bound. [name-already-bound]

   file1.js:3:18
   3| declare function bar(x: number): number; // error: cannot declare
                       ^^^

References:
   file1.js:2:10
   2| function bar(x: string): string { return ""; }
               ^^^ [1]


Error ----------------------------------------------------------------------------------------------------- file1.js:6:5

Cannot call `bar` with `42` bound to `x` because number [1] is incompatible with string [2]. [incompatible-type]

   file1.js:6:5
   6| bar(42);
          ^^ [1]

References:
   file1.js:2:17
   2| function bar(x: string): string { return ""; }
                      ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- file1.js:7:5

Cannot call `bar` with `true` bound to `x` because boolean [1] is incompatible with string [2]. [incompatible-type]

   file1.js:7:5
   7| bar(true);
          ^^^^ [1]

References:
   file1.js:2:17
   2| function bar(x: string): string { return ""; }
                      ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- file4.js:3:7

Cannot declare `A` [1] because the name is already bound. [name-already-bound]

   file4.js:3:7
   3| class A { x: number }
            ^

References:
   file4.js:1:7
   1| class A { x: string }
            ^ [1]


Error ---------------------------------------------------------------------------------------------------- file5.js:2:10

Cannot declare `f` [1] because the name is already bound. [name-already-bound]

   file5.js:2:10
   2| function f(): number { return 1; };
               ^

References:
   file5.js:1:5
   1| var f: number = 1;
          ^ [1]


Error ------------------------------------------------------------------------------------------------------ test.js:3:2

Cannot cast `f1(...)` to number because string [1] is incompatible with number [2]. [incompatible-type]

   test.js:3:2
   3| (f1(0): number);
       ^^^^^

References:
   file1.js:2:26
   2| function bar(x: string): string { return ""; }
                               ^^^^^^ [1]
   test.js:3:9
   3| (f1(0): number);
              ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:3:5

Cannot call `f1` with `0` bound to `x` because number [1] is incompatible with string [2]. [incompatible-type]

   test.js:3:5
   3| (f1(0): number);
          ^ [1]

References:
   file1.js:2:17
   2| function bar(x: string): string { return ""; }
                      ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:6:2

Cannot cast `f2(...)` to string because number [1] is incompatible with string [2]. [incompatible-type]

   test.js:6:2
   6| (f2(""): string);
       ^^^^^^

References:
   file2.js:2:34
   2| declare function foo(x: number): number;
                                       ^^^^^^ [1]
   test.js:6:10
   6| (f2(""): string);
               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ test.js:6:5

Cannot call `f2` with empty string bound to `x` because string [1] is incompatible with number [2]. [incompatible-type]

   test.js:6:5
   6| (f2(""): string);
          ^^ [1]

References:
   file2.js:2:25
   2| declare function foo(x: number): number;
                              ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:10:2

Cannot call `f3` because: [incompatible-type]
 - Either string [1] is incompatible with number [2].
 - Or string [1] is incompatible with boolean [3].

   test.js:10:2
   10| (f3(""): string);
        ^^

References:
   test.js:10:5
   10| (f3(""): string);
           ^^ [1]
   file3.js:3:25
    3| declare function foo(x: number): number;
                               ^^^^^^ [2]
   file3.js:5:25
    5| declare function foo(x: boolean): boolean;
                               ^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------------- test.js:16:2

Cannot cast `(new c).x` to number because string [1] is incompatible with number [2]. [incompatible-type]

   test.js:16:2
   16| ((new c).x: number);
        ^^^^^^^^^

References:
   file4.js:1:14
    1| class A { x: string }
                    ^^^^^^ [1]
   test.js:16:13
   16| ((new c).x: number);
                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:20:2

Cannot call `f5` because number [1] is not a function. [not-a-function]

   test.js:20:2
   20| (f5(): number);
        ^^

References:
   file5.js:1:8
    1| var f: number = 1;
              ^^^^^^ [1]



Found 12 errors
