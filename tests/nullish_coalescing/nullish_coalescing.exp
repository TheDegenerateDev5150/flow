Error ---------------------------------------------------------------------------------------- nullish_coalescing.js:2:4

This condition is likely falsy.
[WARNING]: Flow's type inference may be incorrect that it could be null at runtime (due to `any` annotations,
out-of-bounds array accesses, etc.). If the check is valid, you might want to make the type of this expression nullable
(`T` -> `?T`). [constant-condition]

   2|   (undefined ?? "hello" : string);
         ^^^^^^^^^


Error ---------------------------------------------------------------------------------------- nullish_coalescing.js:4:4

Cannot cast `a ?? "hello"` to empty because string [1] is incompatible with empty [2]. [incompatible-type]

   nullish_coalescing.js:4:4
   4|   (a ?? "hello" : empty); // Error
         ^

References:
   nullish_coalescing.js:1:18
   1| function foo(a: ?string, b: ?number, c : boolean) {
                       ^^^^^^ [1]
   nullish_coalescing.js:4:19
   4|   (a ?? "hello" : empty); // Error
                        ^^^^^ [2]


Error ---------------------------------------------------------------------------------------- nullish_coalescing.js:4:9

Cannot cast `a ?? "hello"` to empty because string [1] is incompatible with empty [2]. [incompatible-type]

   nullish_coalescing.js:4:9
   4|   (a ?? "hello" : empty); // Error
              ^^^^^^^ [1]

References:
   nullish_coalescing.js:4:19
   4|   (a ?? "hello" : empty); // Error
                        ^^^^^ [2]


Error ---------------------------------------------------------------------------------------- nullish_coalescing.js:6:4

Cannot cast `a ?? 42` to empty because string [1] is incompatible with empty [2]. [incompatible-type]

   nullish_coalescing.js:6:4
   6|   (a ?? 42 : empty); // Error
         ^

References:
   nullish_coalescing.js:1:18
   1| function foo(a: ?string, b: ?number, c : boolean) {
                       ^^^^^^ [1]
   nullish_coalescing.js:6:14
   6|   (a ?? 42 : empty); // Error
                   ^^^^^ [2]


Error ---------------------------------------------------------------------------------------- nullish_coalescing.js:6:9

Cannot cast `a ?? 42` to empty because number [1] is incompatible with empty [2]. [incompatible-type]

   nullish_coalescing.js:6:9
   6|   (a ?? 42 : empty); // Error
              ^^ [1]

References:
   nullish_coalescing.js:6:14
   6|   (a ?? 42 : empty); // Error
                   ^^^^^ [2]


Error ---------------------------------------------------------------------------------------- nullish_coalescing.js:8:4

This condition is likely falsy.
[WARNING]: Flow's type inference may be incorrect that it could be null at runtime (due to `any` annotations,
out-of-bounds array accesses, etc.). If the check is valid, you might want to make [1] nullable (`T` -> `?T`).
[constant-condition]

   nullish_coalescing.js:8:4
   8|   (d ?? "true" : string); // constant-condition error
         ^

References:
   nullish_coalescing.js:7:11
   7|   var d = null;
                ^^^^ [1]


Error ---------------------------------------------------------------------------------------- nullish_coalescing.js:9:4

This condition is likely falsy.
[WARNING]: Flow's type inference may be incorrect that it could be null at runtime (due to `any` annotations,
out-of-bounds array accesses, etc.). If the check is valid, you might want to make [1] nullable (`T` -> `?T`).
[constant-condition]

   nullish_coalescing.js:9:4
   9|   (d ?? a ?? b : ?(string | number)); // constant-condition error
         ^

References:
   nullish_coalescing.js:7:11
   7|   var d = null;
                ^^^^ [1]


Error --------------------------------------------------------------------------------------- nullish_coalescing.js:16:4

Cannot cast `d ?? "hello"` to empty because string [1] is incompatible with empty [2]. [incompatible-type]

   nullish_coalescing.js:16:4
   16|   (d ?? "hello" : empty); // Error
          ^

References:
   nullish_coalescing.js:1:18
    1| function foo(a: ?string, b: ?number, c : boolean) {
                        ^^^^^^ [1]
   nullish_coalescing.js:16:19
   16|   (d ?? "hello" : empty); // Error
                         ^^^^^ [2]


Error --------------------------------------------------------------------------------------- nullish_coalescing.js:16:4

Cannot cast `d ?? "hello"` to empty because number [1] is incompatible with empty [2]. [incompatible-type]

   nullish_coalescing.js:16:4
   16|   (d ?? "hello" : empty); // Error
          ^

References:
   nullish_coalescing.js:1:30
    1| function foo(a: ?string, b: ?number, c : boolean) {
                                    ^^^^^^ [1]
   nullish_coalescing.js:16:19
   16|   (d ?? "hello" : empty); // Error
                         ^^^^^ [2]


Error --------------------------------------------------------------------------------------- nullish_coalescing.js:16:9

Cannot cast `d ?? "hello"` to empty because string [1] is incompatible with empty [2]. [incompatible-type]

   nullish_coalescing.js:16:9
   16|   (d ?? "hello" : empty); // Error
               ^^^^^^^ [1]

References:
   nullish_coalescing.js:16:19
   16|   (d ?? "hello" : empty); // Error
                         ^^^^^ [2]



Found 10 errors
